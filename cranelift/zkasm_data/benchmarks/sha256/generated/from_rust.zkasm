start:
  zkPC + 2 => RR
  :JMP(function_1)
  :JMP(finalizeExecution)
function_1:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 18 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  CTX :MSTORE(SP - 5)
  CTX :MSTORE(SP)
  257698037760000n => A
  1030792151040n => B
  $ => A :SUB
  $ => E :MLOAD(SP)
  A :MSTORE(SP + 88)
  ${ E >> 32 } => E
  A :MSTORE(MEM:E + 8)
  34359738368n => B
  $ => E :ADD
  E => A
  34359738368n => B
  $ => B :ADD
  0n => CTX
  $ => C :MLOAD(SP)
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  B :MSTORE(SP + 24)
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  34359738368n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => A
  68719476736n => B
  $ => B :ADD
  B :MSTORE(SP + 16)
  0n => CTX
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 16)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  34359738368n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => A
  103079215104n => B
  $ => B :ADD
  B :MSTORE(SP + 8)
  0n => CTX
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  171798691840n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 80)
  0n => CTX
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  34359738368n => B
  $ => A :MLOAD(SP + 88)
  $ => C :ADD
  C => A
  171798691840n => B
  $ => B :ADD
  B :MSTORE(SP + 72)
  0n => C
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 72)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  227633266688n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 64)
  0n => D
  $ => CTX :MLOAD(SP)
  0 => A
  $ => E :ADD
  ${ E >> 32 } => E
  D :MSTORE(MEM:E)
  0n => CTX
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E + 8)
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => A
  103079215104n => B
  $ => B :ADD
  B :MSTORE(SP + 56)
  0n => B
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => A :ADD
  0 => C ;; Offset is too large: 1048600
  $ => CTX :MLOAD(SP)
  0 => A
  $ => B :MLOAD(SP + 56)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => A
  68719476736n => B
  $ => B :ADD
  B => D
  0n => B
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  CTX => A
  $ => B :ADD
  0 => CTX ;; Offset is too large: 1048592
  $ => C :MLOAD(SP)
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  D => B
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => CTX :ADD
  CTX => A
  34359738368n => B
  $ => B :ADD
  B => C
  0n => B
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  CTX => A
  $ => CTX :ADD
  0 => CTX ;; Offset is too large: 1048584
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  C => B
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  476741369856n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => CTX
  0n => B
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => C :MLOAD(MEM:E)
  C => A
  $ => C :ADD
  0 => C ;; Offset is too large: 1048615
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  CTX => B
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  0n => B
  $ => CTX :MLOAD(SP)
  0 => A
  $ => D :ADD
  0 => D ;; Offset is too large: 1048576
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => B :MLOAD(MEM:E)
  B => A
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  D :MSTORE(MEM:E + 64)
  0n => CTX
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E + 96)
  0n => B
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => A :ADD
  0 => C ;; Offset is too large: 1048608
  $ => CTX :MLOAD(SP)
  0 => A
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E + 104)
  493921239040n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 56)
  0 => A
  $ => B :MLOAD(SP + 88)
  $ => CTX :ADD
  0 => CTX
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => B :MLOAD(MEM:E)
  B => A
  $ => B :MLOAD(SP + 56)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  528280977408n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => C
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  CTX => A
  $ => B :MLOAD(SP + 24)
  $ => CTX :ADD
  0 => CTX
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  C => B
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  562640715776n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 48)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 16)
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E)
  $ => CTX :MLOAD(SP)
  0 => A
  $ => B :MLOAD(SP + 48)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  597000454144n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => C
  0 => A
  $ => B :MLOAD(SP + 8)
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E)
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  CTX => A
  C => B
  $ => E :ADD
  ${ E >> 32 } => E
  D :MSTORE(MEM:E)
  631360192512n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => C
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  CTX => A
  $ => B :MLOAD(SP + 80)
  $ => E :ADD
  ${ E >> 32 } => E
  $ => CTX :MLOAD(MEM:E)
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  C => B
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  665719930880n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 48)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 72)
  $ => A :ADD
  ${ A >> 32 } => E
  $ => C :MLOAD(MEM:E)
  $ => CTX :MLOAD(SP)
  0 => A
  $ => B :MLOAD(SP + 48)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  687194767360n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => D
  0 => A
  $ => B :MLOAD(SP + 64)
  $ => CTX :ADD
  0 => CTX
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => C :MLOAD(MEM:E)
  C => A
  D => B
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  47244640256n => CTX
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => C :MLOAD(MEM:E)
  C => A
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E + 168)
  738734374912n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B :MSTORE(SP + 48)
  17179869184n => B
  $ => B :ADD
  $ => CTX :MLOAD(SP)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E)
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => D :MLOAD(MEM:E)
  D => A
  $ => B :MLOAD(SP + 48)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  $ => C :MLOAD(SP)
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 1)
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  D :MSTORE(MEM:E + 169)
  549755813888n => CTX
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 56)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => A :ADD
  ${ A >> 32 } => E
  $ => A :MLOAD(MEM:E + 96)
  9n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  A :MSTORE(SP + 48)
  88n => B
  CTX => A
  $ => B :OR
  B :MSTORE(SP + 40)
  65024n => B
  $ => A :MLOAD(SP + 40)
  $ => B :AND
  B => A
  40n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E :MSTORE(SP + 32)
  16711680n => B
  $ => A :MLOAD(SP + 40)
  $ => B :AND
  B => A
  24n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E :MSTORE(SP + 24)
  4278190080n => B
  $ => A :MLOAD(SP + 40)
  $ => A :AND
  8n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 24)
  E => B
  $ => B :OR
  $ => A :MLOAD(SP + 32)
  $ => A :OR
  A :MSTORE(SP + 24)
  1n => E
  $ => A :MLOAD(SP + 48)
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => A
  4278190080n => B
  $ => A :AND
  A :MSTORE(SP + 16)
  15n => E
  $ => A :MLOAD(SP + 48)
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  16711680n => B
  $ => B :AND
  $ => A :MLOAD(SP + 16)
  $ => A :OR
  A :MSTORE(SP + 16)
  31n => E
  $ => A :MLOAD(SP + 48)
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  65280n => B
  $ => A :AND
  A :MSTORE(SP + 8)
  56n => E
  CTX => A
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  A => B
  $ => A :MLOAD(SP + 8)
  $ => B :OR
  $ => A :MLOAD(SP + 16)
  $ => B :OR
  $ => A :MLOAD(SP + 24)
  $ => A :OR
  A => D
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => A
  171798691840n => B
  $ => B :ADD
  B :MSTORE(SP + 8)
  0n => A
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_1_1)
  :JMP(label_1_2)
label_1_1:
  :JMP(label_1_3)
label_1_2:
  47244640256n => A
  $ => B :MLOAD(SP + 8)
  $ => A :ADD
  4294967296n => B
  $ => A :ADD
  0n => B
  223338299392n => CTX
  SP + 1 => SP
  CTX :MSTORE(SP)
  $ => CTX :MLOAD(SP)
  zkPC + 2 => RR
  :JMP(function_4)
  SP - 1 => SP
  :JMP(label_1_3)
label_1_3:
  6341068275337658368n => B
  D => A
  $ => C :OR
  C :MSTORE(SP + 80)
  47244640256n => A
  240518168576n => B
  $ => A :XOR
  34359738368n => B
  $ => A :LT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_1_5)
  687194767360n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  $ => CTX :MLOAD(SP)
  0 => A
  $ => E :ADD
  $ => CTX :MLOAD(SP + 80)
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => D :ADD
  D => A
  4294967296n => D
  SP + 1 => SP
  D :MSTORE(SP)
  $ => B :MLOAD(SP + 8)
  $ => CTX :MLOAD(SP)
  zkPC + 2 => RR
  :JMP(function_2)
  SP - 1 => SP
  $ => CTX :MLOAD(SP)
  :JMP(label_1_6)
label_1_5:
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => E :ADD
  E => A
  4294967296n => E
  SP + 1 => SP
  E :MSTORE(SP)
  $ => B :MLOAD(SP + 8)
  $ => CTX :MLOAD(SP)
  zkPC + 2 => RR
  :JMP(function_2)
  SP - 1 => SP
  962072674304n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => CTX
  $ => D :MLOAD(SP)
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  927712935936n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => CTX
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  893353197568n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => C
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  858993459200n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => C
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  824633720832n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => C
  ${ D >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  C :MSTORE(MEM:E)
  790273982464n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  0n => D
  $ => C :MLOAD(SP)
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  ${ E >> 32 } => E
  D :MSTORE(MEM:E)
  0n => CTX
  $ => B :MLOAD(SP)
  ${ B >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E + 176)
  $ => A :MLOAD(SP)
  ${ A >> 32 } => E
  $ => B :MLOAD(MEM:E)
  B => A
  $ => B :MLOAD(SP + 88)
  $ => E :ADD
  $ => A :MLOAD(SP + 80)
  ${ E >> 32 } => E
  A :MSTORE(MEM:E + 232)
  274877906944n => B
  $ => A :MLOAD(SP + 88)
  $ => B :ADD
  B => C
  755914244096n => B
  $ => B :ADD
  4294967296n => CTX
  SP + 1 => SP
  CTX :MSTORE(SP)
  C => A
  $ => CTX :MLOAD(SP)
  zkPC + 2 => RR
  :JMP(function_2)
  SP - 1 => SP
  $ => CTX :MLOAD(SP)
  :JMP(label_1_6)
label_1_6:
  $ => CTX :MLOAD(SP)
  0 => A
  $ => B :MLOAD(SP + 88)
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 80)
  0 => A
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 72)
  0 => A
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 64)
  0 => A
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 56)
  0 => A
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 48)
  0 => A
  $ => CTX :ADD
  0 => A
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 40)
  0 => A
  $ => CTX :ADD
  0 => A
  A :MSTORE(SP + 32)
  103079215104n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E :MSTORE(SP + 8)
  280375465082880n => B
  $ => CTX :AND
  CTX => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => A :OR
  A :MSTORE(SP + 16)
  B :MSTORE(SP + 24)
  34359738368n => E
  $ => A :MLOAD(SP + 32)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A => CTX
  103079215104n => E
  $ => A :MLOAD(SP + 32)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  CTX => A
  $ => CTX :OR
  $ => A :MLOAD(SP + 16)
  B => C
  CTX => B
  $ => A :OR
  A => CTX
  280375465082880n => B
  $ => CTX :AND
  CTX :MSTORE(SP + 16)
  A => CTX
  68719476736n => E
  C => A
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 16)
  E => B
  $ => A :OR
  A :MSTORE(SP + 16)
  68719476736n => E
  $ => A :MLOAD(SP + 24)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 16)
  $ => A :OR
  32n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E :MSTORE(SP + 16)
  18374686479671623680n => B
  CTX => A
  $ => A :AND
  $ => CTX :MLOAD(SP)
  A :MSTORE(SP + 8)
  0 => A
  $ => B :MLOAD(SP + 88)
  $ => CTX :ADD
  0 => A
  A :MSTORE(SP + 24)
  103079215104n => E
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  68719476736n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => B :OR
  $ => A :MLOAD(SP + 16)
  $ => A :OR
  A :MSTORE(SP + 16)
  34359738368n => E
  $ => A :MLOAD(SP + 24)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 8)
  280375465082880n => B
  $ => A :MLOAD(SP + 24)
  $ => CTX :AND
  CTX => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => A
  68719476736n => E
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => B :OR
  $ => A :MLOAD(SP + 16)
  $ => A :OR
  8n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  1095216660480n => B
  $ => A :MLOAD(SP + 24)
  $ => B :AND
  CTX => A
  $ => A :OR
  0n => B
  $ => CTX :MLOAD(SP)
  B :ASSERT
  103079215104n => E
  $ => A :MLOAD(SP + 40)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  280375465082880n => B
  $ => C :AND
  C => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  CTX => A
  E => B
  $ => A :OR
  B => CTX
  A :MSTORE(SP + 8)
  34359738368n => E
  $ => A :MLOAD(SP + 40)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 16)
  103079215104n => E
  $ => A :MLOAD(SP + 40)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 16)
  $ => C :OR
  $ => A :MLOAD(SP + 8)
  B => D
  C => B
  $ => A :OR
  A :MSTORE(SP + 16)
  280375465082880n => B
  $ => C :AND
  C :MSTORE(SP + 8)
  68719476736n => E
  D => A
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => A :OR
  A :MSTORE(SP + 8)
  68719476736n => E
  CTX => A
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => A :OR
  32n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  18374686479671623680n => B
  $ => A :MLOAD(SP + 16)
  $ => A :AND
  A :MSTORE(SP + 8)
  103079215104n => E
  $ => A :MLOAD(SP + 48)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  68719476736n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => B :OR
  CTX => A
  $ => A :OR
  A => CTX
  34359738368n => E
  $ => A :MLOAD(SP + 48)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 8)
  280375465082880n => B
  $ => A :MLOAD(SP + 48)
  $ => C :AND
  C => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => A
  68719476736n => E
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => B :OR
  CTX => A
  $ => A :OR
  8n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  1095216660480n => B
  $ => A :MLOAD(SP + 48)
  $ => B :AND
  CTX => A
  $ => A :OR
  0n => B
  $ => CTX :MLOAD(SP)
  B :ASSERT
  103079215104n => E
  $ => A :MLOAD(SP + 56)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  280375465082880n => B
  $ => D :AND
  D => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  CTX => A
  E => B
  $ => A :OR
  B => CTX
  A :MSTORE(SP + 8)
  34359738368n => E
  $ => A :MLOAD(SP + 56)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 16)
  103079215104n => E
  $ => A :MLOAD(SP + 56)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 16)
  $ => D :OR
  $ => A :MLOAD(SP + 8)
  B => C
  D => B
  $ => A :OR
  A :MSTORE(SP + 16)
  280375465082880n => B
  $ => D :AND
  D :MSTORE(SP + 8)
  68719476736n => E
  C => A
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => A :OR
  A :MSTORE(SP + 8)
  68719476736n => E
  CTX => A
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => A :OR
  32n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  18374686479671623680n => B
  $ => A :MLOAD(SP + 16)
  $ => A :AND
  A :MSTORE(SP + 8)
  103079215104n => E
  $ => A :MLOAD(SP + 64)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  68719476736n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => B :OR
  CTX => A
  $ => A :OR
  A => CTX
  34359738368n => E
  $ => A :MLOAD(SP + 64)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 8)
  280375465082880n => B
  $ => A :MLOAD(SP + 64)
  $ => D :AND
  D => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => A
  68719476736n => E
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => B :OR
  CTX => A
  $ => A :OR
  8n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  1095216660480n => B
  $ => A :MLOAD(SP + 64)
  $ => B :AND
  CTX => A
  $ => A :OR
  0n => B
  $ => CTX :MLOAD(SP)
  B :ASSERT
  103079215104n => E
  $ => A :MLOAD(SP + 72)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  280375465082880n => B
  $ => E :AND
  E => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  CTX => A
  E => B
  $ => A :OR
  B => CTX
  A :MSTORE(SP + 8)
  34359738368n => E
  $ => A :MLOAD(SP + 72)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 16)
  103079215104n => E
  $ => A :MLOAD(SP + 72)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 16)
  $ => E :OR
  $ => A :MLOAD(SP + 8)
  B => C
  E => B
  $ => A :OR
  A :MSTORE(SP + 16)
  280375465082880n => B
  $ => E :AND
  E :MSTORE(SP + 8)
  68719476736n => E
  C => A
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => A :OR
  A :MSTORE(SP + 8)
  68719476736n => E
  CTX => A
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => A :OR
  32n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => CTX
  18374686479671623680n => B
  $ => A :MLOAD(SP + 16)
  $ => A :AND
  A :MSTORE(SP + 8)
  103079215104n => E
  $ => A :MLOAD(SP + 80)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  68719476736n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  $ => A :MLOAD(SP + 8)
  E => B
  $ => B :OR
  CTX => A
  $ => A :OR
  A => CTX
  34359738368n => E
  $ => A :MLOAD(SP + 80)
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  280375465082880n => B
  $ => A :AND
  A :MSTORE(SP + 8)
  280375465082880n => B
  $ => A :MLOAD(SP + 80)
  $ => E :AND
  E => A
  34359738368n => E
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  E => A
  68719476736n => E
  E :MSTORE(SP)
  0 => D
  A => E
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => E :MLOAD(SP)
  A :MSTORE(SP)
  0 => D
  4294967296n => B
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  A => E
  32 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E
;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  A => E
  0 => D
  ${E / B} => A
  ${E % B} => C
  E :ARITH
  0 => C
  4294967296n => B
  ${A * B} => E
  0 => D
  E :ARITH
  E => A
  A => B
  $ => A :MLOAD(SP + 8)
  $ => B :OR
  CTX => A
  $ => A :OR
  8n => E
  A :MSTORE(SP)
  64 => B
  0 => D
  ${E / B} => A
  ${E % B} => C
  E:ARITH
  $ => A :MLOAD(SP)
  C => E;;NEED_INCLUDE: 2-exp
  zkPC + 2 => RR
    :JMP(@two_power + E)
  0 => D
  0 => C
  $${var _mulShlArith = A * B}
  ${_mulShlArith / 18446744073709551616} => D
  ${_mulShlArith % 18446744073709551616} => E :ARITH
  1095216660480n => B
  $ => A :MLOAD(SP + 80)
  $ => B :AND
  E => A
  $ => A :OR
  0n => B
  $ => CTX :MLOAD(SP)
  B :ASSERT
  1030792151040n => B
  $ => A :MLOAD(SP + 88)
  $ => A :ADD
  $ => E :MLOAD(SP)
  ${ E >> 32 } => E
  A :MSTORE(MEM:E + 8)
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  $ => CTX :MLOAD(SP - 5)
  SP - 18 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
function_2:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 2 => SP
  C :MSTORE(SP - 1)
  E :MSTORE(SP - 2)
  ;; $ => C :MLOAD(fp + 16)
  SP + 1 => SP
  C :MSTORE(SP)
  zkPC + 2 => RR
  :JMP(function_3)
  SP - 1 => SP
  $ => C :MLOAD(SP - 1)
  $ => E :MLOAD(SP - 2)
  SP - 2 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
function_3:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 5 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  B :MSTORE(SP)
  A => B
  ;; $ => A :MLOAD(fp + 16)
  A => C
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 28)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 24)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 20)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 16)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 12)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 8)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E + 4)
  0 => A
  $ => D :ADD
  ${ D >> 32 } => E
  $ => D :MLOAD(MEM:E)
  0n => B
  C => A
  $ => A :EQ
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_3_1)
  :JMP(label_3_2)
label_3_1:
  :JMP(label_3_5)
label_3_2:
  0 => A
  $ => B :MLOAD(SP)
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 4)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 8)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 12)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 16)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 20)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 24)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 28)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 32)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 36)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 40)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 44)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 48)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 52)
  0 => A
  $ => C :ADD
  ${ C >> 32 } => E
  $ => C :MLOAD(MEM:E + 56)
  0 => A
  $ => B :ADD
  ${ B >> 32 } => E
  $ => B :MLOAD(MEM:E + 60)
  :JMP(label_3_5)
label_3_5:
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  SP - 5 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
function_4:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 2 => SP
  C :MSTORE(SP - 1)
  E :MSTORE(SP - 2)
  ;; $ => C :MLOAD(fp + 16)
  SP + 1 => SP
  C :MSTORE(SP)
  zkPC + 2 => RR
  :JMP(function_5)
  SP - 1 => SP
  $ => C :MLOAD(SP - 1)
  $ => E :MLOAD(SP - 2)
  SP - 2 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
function_5:
  SP + 1 => SP
  RR :MSTORE(SP - 1)
  SP + 12 => SP
  C :MSTORE(SP - 1)
  D :MSTORE(SP - 2)
  E :MSTORE(SP - 3)
  B :MSTORE(SP - 4)
  CTX :MSTORE(SP - 5)
  A :MSTORE(SP)
  B :MSTORE(SP + 8)
  ;; $ => A :MLOAD(fp + 16)
  A :MSTORE(SP + 16)
  64424509440n => B
  A => C
  B => A
  C => B
  $ => A :LT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_2)
  CTX :MSTORE(SP + 24)
  $ => E :MLOAD(SP + 16)
  $ => C :MLOAD(SP)
  C :MSTORE(SP + 16)
  :JMP(label_5_17)
label_5_2:
  0n => A
  $ => B :MLOAD(SP)
  $ => A :SUB
  12884901888n => B
  $ => B :AND
  $ => A :MLOAD(SP)
  $ => C :ADD
  B :MSTORE(SP + 32)
  C :MSTORE(SP + 40)
  0n => B
  $ => A :MLOAD(SP + 32)
  $ => A :EQ
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_3)
  :JMP(label_5_4)
label_5_3:
  $ => A :MLOAD(SP + 16)
  $ => B :MLOAD(SP + 32)
  CTX :MSTORE(SP + 24)
  :JMP(label_5_9)
label_5_4:
  $ => B :MLOAD(SP)
  :JMP(label_5_5)
label_5_5:
  0 => A
  CTX :MSTORE(SP + 24)
  $ => E :ADD
  B => A
  $ => B :MLOAD(SP + 8)
  ${ E >> 32 } => E
  B :MSTORE(MEM:E)
  4294967296n => B
  $ => E :ADD
  E => A
  $ => B :MLOAD(SP + 40)
  $ => A :LT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_6)
  :JMP(label_5_7)
label_5_6:
  E => B
  $ => CTX :MLOAD(SP + 24)
  :JMP(label_5_5)
label_5_7:
  $ => A :MLOAD(SP + 16)
  $ => B :MLOAD(SP + 32)
  :JMP(label_5_9)
label_5_9:
  $ => A :SUB
  18446744056529682432n => B
  $ => B :AND
  A :MSTORE(SP + 32)
  $ => A :MLOAD(SP + 40)
  $ => C :ADD
  B => A
  C :MSTORE(SP + 16)
  4294967296n => B
  $ => A :SLT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_10)
  :JMP(label_5_11)
label_5_10:
  :JMP(label_5_16)
label_5_11:
  1095216660480n => B
  $ => A :MLOAD(SP + 8)
  $ => B :AND
  72340172821233664n => E
  B :MSTORE(SP)
  0 => D
  0 => C
  4294967296n => B
  ${E / B} => A
  E:ARITH
  $ => B :MLOAD(SP)
  ${A * B} => CTX :ARITH
  $ => C :MLOAD(SP + 24)
  $ => B :MLOAD(SP + 40)
  :JMP(label_5_12)
label_5_12:
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  C :MSTORE(SP + 24)
  $ => E :ADD
  B => A
  ${ E >> 32 } => E
  CTX :MSTORE(MEM:E)
  17179869184n => B
  $ => E :ADD
  E => A
  $ => B :MLOAD(SP + 16)
  $ => A :LT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_13)
  :JMP(label_5_14)
label_5_13:
  $ => C :MLOAD(SP + 24)
  E => B
  :JMP(label_5_12)
label_5_14:
  :JMP(label_5_16)
label_5_16:
  12884901888n => B
  $ => A :MLOAD(SP + 32)
  $ => E :AND
  :JMP(label_5_17)
label_5_17:
  0n => B
  E => A
  $ => A :EQ
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_18)
  :JMP(label_5_19)
label_5_18:
  :JMP(label_5_24)
label_5_19:
  $ => A :MLOAD(SP + 16)
  E => B
  $ => C :ADD
  C :MSTORE(SP + 32)
  $ => C :MLOAD(SP + 24)
  A => B
  :JMP(label_5_20)
label_5_20:
  ${ C >> 32 } => E
  $ => A :MLOAD(MEM:E)
  $ => E :ADD
  B => D
  $ => A :MLOAD(SP + 8)
  ${ E >> 32 } => E
  A :MSTORE(MEM:E)
  4294967296n => B
  D => A
  $ => CTX :ADD
  CTX => A
  $ => B :MLOAD(SP + 32)
  $ => A :LT
  4294967296n => B
  0 => D
  0 => C
  ${A * B} => A :ARITH
  A => B
  0 => A
  $ => A :EQ
  A :JMPZ(label_5_21)
  :JMP(label_5_22)
label_5_21:
  $ => C :MLOAD(SP + 24)
  CTX => B
  :JMP(label_5_20)
label_5_22:
  :JMP(label_5_24)
label_5_24:
  $ => A :MLOAD(SP)
  $ => C :MLOAD(SP - 1)
  $ => D :MLOAD(SP - 2)
  $ => E :MLOAD(SP - 3)
  $ => B :MLOAD(SP - 4)
  $ => CTX :MLOAD(SP - 5)
  SP - 12 => SP
  $ => RR :MLOAD(SP - 1)
  SP - 1 => SP
  :JMP(RR)
finalizeExecution:
  ${beforeLast()}  :JMPN(finalizeExecution)
                   :JMP(start)
INCLUDE "helpers/2-exp.zkasm"